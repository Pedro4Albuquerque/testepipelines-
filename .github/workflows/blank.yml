name: Node.js CI + Sleuth (curl)

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

concurrency:
  group: prod-${{ github.ref }}
  cancel-in-progress: false

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix: { node-version: [18.x, 20.x] }
    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 0 }

      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: npm

      - run: npm ci
      - run: npm test -- --coverage

      - if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ matrix.node-version }}
          path: coverage

  notify_sleuth:
    name: Register deploy in Sleuth (curl)
    needs: test
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    environment: production
    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 0 }

      # (Opcional) espere alguns segundos se o Vercel ainda estiver finalizando
      - name: Sleep a bit
        run: sleep 5

      - name: Notify Sleuth via API
        env:
          SLEUTH_API_KEY: ${{ secrets.SLEUTH_API_KEY }}
          ORG: pedro-albuquerque
          DEP: testepipelines-            # seu deployment-slug confirmado
          ENV: production                 # deve existir no Sleuth
          SHA: ${{ github.sha }}
        run: |
          set -e
          echo "POST /api/1/deployments/$ORG/$DEP/register_deploy (sha=$SHA, env=$ENV)"
          # Mostra cabeçalhos + body de resposta para diagnosticar (NÃO mostra seu token)
          curl -i -X POST "https://app.sleuth.io/api/1/deployments/$ORG/$DEP/register_deploy" \
            -H "Authorization: Bearer $SLEUTH_API_KEY" \
            -H "Content-Type: application/json" \
            -d "{\"sha\":\"$SHA\",\"environment\":\"$ENV\"}"
